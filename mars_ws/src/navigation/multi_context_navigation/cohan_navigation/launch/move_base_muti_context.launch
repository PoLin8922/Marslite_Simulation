<launch>
  <!-- Arguments -->
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="odom" />
  <arg name="num_humans" default="2"/>
  
  <!-- Stage humans to /tracked_humans -->
  <!-- <node name="humans" pkg="stage_ros" type="humans_bridge.py" args="$(arg num_humans)" output="screen"/> -->

  <!-- human pose prediction, for the local-planning -->
  <!-- <node pkg="human_path_prediction" type="human_path_prediction" name="human_path_predict" output="screen" >
    <remap from="~/" to="/human_path_predict"/>
    <remap from="/human_path_predict/tracked_humans" to="/tracked_humans"/>
    <remap from="/human_path_predict/external_human_paths" to="/humans_sim_node/MultiGoalPlanner/plans"/>
    <remap from="/human_path_predict/external_human_trajs" to="/move_base_node/HATebLocalPlannerROS/human_local_trajs"/>

    <param name="velobs_mul" value="1.0"/>
    <param name="velscale_mul" value="2.0"/>
  </node> -->
  
  <!-- <node pkg="human_path_prediction" type="predict_goal.py" name="human_goal_predict" output="screen"/> -->
  <!-- <node pkg="human_path_prediction" type="predict_goal_srv.py" name="human_goal_predict" output="screen"/> -->
  <!-- <node pkg="human_path_prediction" type="predicted_goals_pub.py" name="human_goal_predict" output="screen"/> -->

  <!-- Filter the humans from laser scan -->
  <!-- <node pkg="human_layers" type="human_filter.py" name="human_filter_laser" output="screen">
    <remap from="base_scan" to="scan"/>
  </node> -->

  <!-- apply corner detection -->
  <node pkg="ros_cc_detector" name="critical_points_detector" type="detection" output="screen" respawn="true">
    <param name="scan_topics" value="/scan"/>
    <param name="cmd_vel_topic" value="$(arg cmd_vel_topic)"/>
    <!-- <param name="output_frame" value="map"/> -->
    <param name="output_frame" value="odom"/>
    <param name="output_topic" value="/move_base/HATebLocalPlannerROS/critical_corners"/>
    <param name="base_frame" value="base_link"/>
    <param name="min_occlusion" value="0.8"/>
    <param name="dist_threshold" value="1"/>
    <param name="dist_tolerance" value="0.4"/>
  </node>

  <!-- transform teb velovity to robot -->
  <node pkg="cohan_navigation" type="transVel.py" name="transVel"/>

  <!-- move_base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find cohan_navigation)/config/stage_pr2_move_base_config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find cohan_navigation)/config/stage_pr2_move_base_config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find cohan_navigation)/config/stage_pr2_move_base_config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find cohan_navigation)/config/stage_pr2_move_base_config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find cohan_navigation)/config/stage_pr2_move_base_config/move_base_params.yaml" command="load" />
    <rosparam file="$(find cohan_navigation)/config/stage_pr2_move_base_config/costmap_common_params.yaml" command="load" ns="navigability_costmap" />
    <rosparam file="$(find cohan_navigation)/config/stage_pr2_move_base_config/navigability_costmap.yaml" command="load" />
    <rosparam file="$(find cohan_navigation)/config/stage_pr2_move_base_config/costmap_common_params.yaml" command="load" ns="displayed_costmap" />
    <rosparam file="$(find cohan_navigation)/config/stage_pr2_move_base_config/displayed_costmap.yaml" command="load" />
    <rosparam file="$(find cohan_navigation)/config/stage_pr2_move_base_config/our_planner_params.yaml" command="load" ns="HATebLocalPlannerROS" />
    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="odom" to="$(arg odom_topic)"/>

    <param name="base_global_planner" value="global_planner/GlobalPlanner" />
    <param name="base_local_planner" value="hateb_local_planner/HATebLocalPlannerROS" />
    <param name="controller_frequency" value="10.0" />
  </node>
</launch>







